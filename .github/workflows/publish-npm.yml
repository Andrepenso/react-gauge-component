name: Update and Publish

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  pre:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - uses: c-hive/gha-yarn-cache@v2

      - name: Install dependencies
        run: yarn install
      - name: Test lint
        run: yarn run eslint

  build:
    runs-on: ubuntu-latest
    #needs: pre
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - uses: c-hive/gha-yarn-cache@v2
      - name: Install dependencies
        run: yarn install
      - name: build
        run: yarn run build


  test:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    strategy:
      matrix:
        scan: [
          secret-scan, 
          # sast-scan, 
          dependency-scan, 
          dast
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - uses: c-hive/gha-yarn-cache@v2

      - name: Install dependencies
        run: yarn install

      - name: Secret Scanner
        if: matrix.scan == 'secret-scan'
        uses: secret-scanner/action@0.0.2

      # - name: Run SAST Scan
      #   if: matrix.scan == 'sast-scan'
      #   run: |
      #     echo "Running SAST Scan"
      #     eslint . --ext .js,.jsx,.ts,.tsx --output-file eslint-report.json -f json
      - name: Depcheck
        if: matrix.scan == 'dependency-scan'
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        if: matrix.scan == 'dependency-scan'
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports
      - name: Run DAST
        if: matrix.scan == 'dast'
        run: |
          echo "Running DAST"
          docker run -v $(pwd):/zap/wrk/:rw -t zaproxy/zap-stable zap-baseline.py -t http://localhost:3000 -r zap-report.html

      
  compliance:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - uses: c-hive/gha-yarn-cache@v2

      - name: Install dependencies
        run: yarn install

      - name: Enforce compliance
        run: yarn run enforce-compliance

  publish:
    runs-on: ubuntu-latest
    needs: compliance
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - uses: c-hive/gha-yarn-cache@v2

      - name: Install dependencies
        run: yarn install

      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      - name: package.json info
        id: info
        uses: jaywcjlove/github-action-package@main
        with:
          version: ${{steps.get_version.outputs.version-without-v}}

      #- name: Publish to npm
      # run: npm publish --access public
      #  env:
      #    NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
